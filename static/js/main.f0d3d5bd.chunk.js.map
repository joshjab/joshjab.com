{"version":3,"sources":["img/pilot.jpg","profile.png","img/auburn.png","img/trideum.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Navbar","bg","variant","sticky","Brand","NavDropdown","Item","href","Container","fluid","Row","Col","xs","sm","Image","src","trideum","profile","roundedCircle","auburn","Carousel","pilot","Caption","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,2SC+F5BC,MAhFf,WACE,OACE,yBAAKC,UAAU,QACb,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,OACtC,kBAACH,EAAA,EAAOI,MAAR,CAAcL,UAAU,YAAxB,sBACE,kBAACM,EAAA,EAAD,CAAaN,UAAU,YACvB,kBAACM,EAAA,EAAYC,KAAb,CAAkBC,KAAK,SAAvB,QACA,kBAACF,EAAA,EAAYC,KAAb,CAAkBC,KAAK,aAAvB,YACA,kBAACF,EAAA,EAAYC,KAAb,CAAkBC,KAAK,SAAvB,QACA,kBAACF,EAAA,EAAYC,KAAb,CAAkBC,KAAK,YAAvB,aAIN,yBAAKR,UAAU,eACb,kBAACS,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKX,UAAU,WACb,kBAACY,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAKZ,UAAU,kCAAkCa,GAAI,GACnD,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAOC,IAAKC,IAASjB,UAAU,oBAEjC,kBAACY,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAOC,IAAKE,IAASC,eAAa,EAACnB,UAAU,cAE/C,kBAACY,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAOC,IAAKI,IAAQpB,UAAU,oBAGlC,kBAACW,EAAA,EAAD,CAAKX,UAAU,YACb,4BAAQA,UAAU,eAAlB,uBAEF,kBAACW,EAAA,EAAD,CAAKX,UAAU,YACb,4BAAQA,UAAU,gBAAlB,uCAEF,kBAACW,EAAA,EAAD,CAAKX,UAAU,YACb,4BAAQA,UAAU,qBAAlB,0BACyB,uBAAGQ,KAAK,4BAAR,uBADzB,kDAKJ,kBAACI,EAAA,EAAD,OAEF,kBAACD,EAAA,EAAD,CAAKX,UAAU,gBACb,kBAACY,EAAA,EAAD,KACA,kBAACS,EAAA,EAAD,KACE,kBAACA,EAAA,EAASd,KAAV,KACE,yBAAKS,IAAKM,MACV,kBAACD,EAAA,EAASE,QAAV,KACE,0CAGJ,kBAACF,EAAA,EAASd,KAAV,KACE,yBAAKS,IAAKM,MACV,kBAACD,EAAA,EAASE,QAAV,KACE,4CAGJ,kBAACF,EAAA,EAASd,KAAV,KACE,yBAAKS,IAAKM,MACV,kBAACD,EAAA,EAASE,QAAV,KACE,wDAGJ,kBAACF,EAAA,EAASd,KAAV,KACE,yBAAKS,IAAKM,MACV,kBAACD,EAAA,EAASE,QAAV,KACE,oECtEIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f0d3d5bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pilot.fe5cff08.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.78ff9530.png\";","module.exports = __webpack_public_path__ + \"static/media/auburn.3c1b8670.png\";","module.exports = __webpack_public_path__ + \"static/media/trideum.529ab914.png\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Carousel from 'react-bootstrap/Carousel'\nimport Image from 'react-bootstrap/Image'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport profile from './profile.png'\nimport pilot from './img/pilot.jpg'\nimport auburn from './img/auburn.png'\nimport trideum from './img/trideum.png'\n\nfunction App() {\n  return (\n    <div className=\"Home\">\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n        <Navbar.Brand className=\"navStyle\">Joshua Jablonowski</Navbar.Brand>\n          <NavDropdown className=\"navStyle\">\n          <NavDropdown.Item href=\"#home\">Home</NavDropdown.Item>\n          <NavDropdown.Item href=\"#projects\">Projects</NavDropdown.Item>\n          <NavDropdown.Item href=\"#blog\">Blog</NavDropdown.Item>\n          <NavDropdown.Item href=\"#contact\">Contact</NavDropdown.Item>\n          </NavDropdown>\n          \n      </Navbar>\n    <div className=\"HomeContent\">\n      <Container fluid >\n        <Row className=\"section\">\n          <Col></Col>\n          <Col className=\"rounded shadow Home-header-card\" xs={8}>\n            <Row>\n              <Col xs={3} sm={3}>\n                <Image src={trideum} className=\"Home-side-img2\"></Image>\n              </Col>\n              <Col xs={6} sm={6}>\n                <Image src={profile} roundedCircle className=\"Home-img\"></Image>\n              </Col>\n              <Col xs={3} sm={3}>\n                <Image src={auburn} className=\"Home-side-img\"></Image>\n              </Col>\n            </Row>\n            <Row className=\"centerUp\">\n              <header className=\"Home-header\">Joshua Jablonowski</header>\n            </Row> \n            <Row className=\"centerUp\">\n              <header className=\"Home-header2\">Engineer, Husband, Serial Hobbyist</header>\n            </Row>\n            <Row className=\"centerUp\">\n              <header className=\"Home-header-intro\">\n                Currently working with <a href=\"https://www.trideum.com/\">Trideum Corporation</a> as a Software Engineer at Redstone Arsenal.\n              </header>\n            </Row>\n          </Col>\n          <Col></Col>\n        </Row>\n        <Row className=\"HomeCarousel\">\n          <Col>\n          <Carousel>\n            <Carousel.Item>\n              <img src={pilot}></img>\n              <Carousel.Caption>\n                <h3>Piloting</h3>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img src={pilot}></img>\n              <Carousel.Caption>\n                <h3>Web Design</h3>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img src={pilot}></img>\n              <Carousel.Caption>\n                <h3>Software Defined Radio</h3>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img src={pilot}></img>\n              <Carousel.Caption>\n                <h3>Virtual Reality Development</h3>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    </div>\n        \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}